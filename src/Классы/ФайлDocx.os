Перем _ПутьКФайлуШаблона; // путь к файлу-заготовке с параметрами 
Перем _ИмяФайлаШаблона; // имя файла-заготовки
Перем _ПутьРаспакованный; // путь к распакованному содержимому office open xml
Перем _ИмяФайла; // Имя выходного файла с расширением
Перем _ОбработчикЗаполнения;
Перем _ПарсерХМЛ; // библиотека парсера xml в виде желудя

&Характер("Компанейский")
&Прозвище("docx")
&Желудь
Процедура ПриСозданииОбъекта(&Пластилин ОбработчикЗаполнения, &Пластилин СериализацияДанныхXML)
	_ОбработчикЗаполнения = ОбработчикЗаполнения;
	_ПарсерХМЛ = СериализацияДанныхXML;
КонецПроцедуры

Процедура ЗаполнитьФайл() Экспорт

	ИмяФайлаДокумента = ОбъединитьПути(_ПутьРаспакованный, "word\document.xml");
	ДанныеОбрабатываемогоXML = _ПарсерХМЛ.ПрочитатьИзФайла(ИмяФайлаДокумента);
	ИзмененныйXML = ПодставитьПараметрыВШаблон(ДанныеОбрабатываемогоXML);
	_ПарсерХМЛ.ЗаписатьВФайл(ИзмененныйXML, ИмяФайлаДокумента, Истина);

КонецПроцедуры

Функция ПодставитьПараметрыВШаблон(ДанныеXML)

	Для Каждого НастройкаПодстановки Из _ОбработчикЗаполнения.НастройкиПодстановки() Цикл
		
		Если НастройкаПодстановки["ИмяВыходногоФайла"] <> _ИмяФайла Тогда
			Продолжить;
		КонецЕсли;

		ПрочитатьУзлыДерева(ДанныеXML, 0, НастройкаПодстановки);
		Прервать;

	КонецЦикла;

	Возврат ДанныеXML;

КонецФункции

Процедура ПрочитатьУзлыДерева(УзелДерева, Уровень, Знач НастройкаПодстановки)

	Если ТипЗнч(УзелДерева) = Тип("Структура") Тогда // переход к следующему уровню дерева
		_Элементы = УзелДерева["_Элементы"];
		ПрочитатьУзлыДерева(_Элементы, Уровень + 1, НастройкаПодстановки);
	КонецЕсли;

	Если ТипЗнч(УзелДерева) = Тип("Соответствие") Тогда
		Для Каждого Элемент Из УзелДерева Цикл

			Если Элемент.Ключ = "w:p" Тогда
				ВыполнитьЗаменуПараметровПараграфа(Элемент, НастройкаПодстановки);
			КонецЕсли;
			ПрочитатьУзлыДерева(Элемент.Значение, Уровень + 1, НастройкаПодстановки);

		КонецЦикла;
	КонецЕсли;

	Если ТипЗнч(УзелДерева) = Тип("Массив") Тогда
		Для Каждого Элемент Из УзелДерева Цикл
			ПрочитатьУзлыДерева(Элемент, Уровень + 1, НастройкаПодстановки);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ВыполнитьЗаменуПараметровПараграфа(Параграф, Знач НастройкаПодстановки)

	Если ТипЗнч(Параграф.Значение["_Элементы"]) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;

	ВыполнитьЗаменуВСледующемБлоке = Ложь;

	Для каждого БлокПараграфа Из Параграф.Значение["_Элементы"] Цикл

		Для каждого ЭлементБлокаПараграфа Из БлокПараграфа Цикл
			
			Если ЭлементБлокаПараграфа.Ключ = "w:pPr" Тогда
				Продолжить; // Первым элементом коллекции идут свойства, далее - блоки текста
			КонецЕсли;
	
			ОбработатьБлокиТекста(ЭлементБлокаПараграфа.Значение, НастройкаПодстановки, ВыполнитьЗаменуВСледующемБлоке);

		КонецЦикла;

	КонецЦикла;

КонецПроцедуры

Процедура ОбработатьБлокиТекста(БлокиТекста, НастройкаПодстановки, ВыполнитьЗаменуВСледующемБлоке)

	ИмяКоллекцииЭлементов = "_Элементы";
	ИмяСвойстваЗначение   = "_Значение";

	Для каждого ЭлементБлокаТекста Из БлокиТекста[ИмяКоллекцииЭлементов] Цикл
		Если ЭлементБлокаТекста.Ключ = "w:rPr" Тогда
			Продолжить; // свойства блока текста
		КонецЕсли;
		Если Не ЭлементБлокаТекста.Значение.Свойство(ИмяСвойстваЗначение) Тогда
			Продолжить;
		КонецЕсли;
			
		Если ЭлементБлокаТекста.Значение[ИмяСвойстваЗначение] = "Параметр" Тогда
			ЭлементБлокаТекста.Значение[ИмяСвойстваЗначение] = "";
			ВыполнитьЗаменуВСледующемБлоке = Истина;
			Продолжить;
		ИначеЕсли ВыполнитьЗаменуВСледующемБлоке Тогда
				Замена = ЭлементБлокаТекста.Значение[ИмяСвойстваЗначение];
				ЭлементБлокаТекста.Значение[ИмяСвойстваЗначение] = НастройкаПодстановки[Замена];
				ВыполнитьЗаменуВСледующемБлоке = Ложь;
		Иначе
			Продолжить;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Процедура УстановитьИмяФайла(Знач ИмяФайла) Экспорт
	_ИмяФайла = ИмяФайла;
КонецПроцедуры

Функция ИмяФайла() Экспорт
	Возврат _ИмяФайла;
КонецФункции

Функция ТипФайла() Экспорт
	Возврат ".docx";
КонецФункции

Процедура УстановитьПутьКФайлуШаблона(ПутьКФайлуШаблона) Экспорт
	_ПутьКФайлуШаблона = ПутьКФайлуШаблона;
КонецПроцедуры

Функция ПутьКФайлуШаблона() Экспорт
	Возврат _ПутьКФайлуШаблона;
КонецФункции

Процедура УстановитьПутьКФайлуРаспакованный(ПутьКФайлуРаспакованный) Экспорт
	_ПутьРаспакованный = ПутьКФайлуРаспакованный;
КонецПроцедуры

Функция ПутьРаспакованный() Экспорт
	Возврат _ПутьРаспакованный;
КонецФункции

Процедура УстановитьИмяФайлаШаблона(ИмяФайлаШаблона) Экспорт
	_ИмяФайлаШаблона = ИмяФайлаШаблона;
КонецПроцедуры

Функция ИмяФайлаШаблона() Экспорт
	Возврат _ИмяФайлаШаблона;
КонецФункции